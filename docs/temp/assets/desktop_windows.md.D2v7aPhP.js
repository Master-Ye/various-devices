import{_ as i,c as a,o as e,a2 as n,m as s,a as t}from"./chunks/framework.Bv-1nw0d.js";const v=JSON.parse('{"title":"windows","description":"","frontmatter":{},"headers":[],"relativePath":"desktop/windows.md","filePath":"desktop/windows.md"}'),o={name:"desktop/windows.md"},h=n(`<h1 id="windows" tabindex="-1">windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;windows&quot;">​</a></h1><h2 id="desktop-env" tabindex="-1">Desktop Env <a class="header-anchor" href="#desktop-env" aria-label="Permalink to &quot;Desktop Env&quot;">​</a></h2><p>Desktop platform for various-devices</p><h2 id="iswindows" tabindex="-1">isWindows <a class="header-anchor" href="#iswindows" aria-label="Permalink to &quot;isWindows&quot;">​</a></h2><p>platform Desktop</p><h3 id="usage" tabindex="-1">usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;usage&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { isWindows } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;various-devices&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isWindows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Used to determine whether it is a window platform and can be used in both browsers and electrons.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isWindows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span></code></pre></div><p>Get the current desktop device</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { getDesktop } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;various-devices&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getDesktop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><code>getDesktop</code> return value is one of the following</p><table><thead><tr><th>value</th><th>introduce</th></tr></thead><tbody><tr><td>macos</td><td>苹果</td></tr><tr><td>windows</td><td>windows</td></tr><tr><td>linux</td><td>Linux</td></tr></tbody></table><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,14),l=s("table",null,[s("tbody",null,[s("tr",null,[s("td",{align:"center",valign:"top",width:"14.28%"},[s("a",{href:"https://github.com/message163"},[s("img",{src:"https://avatars.githubusercontent.com/u/32630999?v=4?s=50",width:"50px;",alt:"xiaoMan"}),s("br"),s("sub",null,[s("b",null,"xiaoMan")])]),s("br"),s("a",{href:"https://github.com/message163/various-devices/commits?author=message163",title:"Code"},"💻"),t(),s("a",{href:"https://github.com/message163/various-devices/commits?author=message163",title:"Documentation"},"📖"),t(),s("a",{href:"#design-message163",title:"Design"},"🎨")]),s("td",{align:"center",valign:"top",width:"14.28%"},[s("a",{href:"https://github.com/yanzibiezou"},[s("img",{src:"https://avatars.githubusercontent.com/u/107256547?v=4?s=50",width:"50px;",alt:"yanzibiezou"}),s("br"),s("sub",null,[s("b",null,"yanzibiezou")])]),s("br"),s("a",{href:"https://github.com/message163/various-devices/commits?author=yanzibiezou",title:"Code"},"💻")]),s("td",{align:"center",valign:"top",width:"14.28%"},[s("a",{href:"https://github.com/core-admin"},[s("img",{src:"https://avatars.githubusercontent.com/u/77573477?v=4?s=50",width:"50px;",alt:"徐轲"}),s("br"),s("sub",null,[s("b",null,"徐轲")])]),s("br"),s("a",{href:"https://github.com/message163/various-devices/commits?author=core-admin",title:"Code"},"💻")]),s("td",{align:"center",valign:"top",width:"14.28%"},[s("a",{href:"https://github.com/yinxing233"},[s("img",{src:"https://avatars.githubusercontent.com/u/132836709?v=4?s=50",width:"50px;",alt:"yinxing233"}),s("br"),s("sub",null,[s("b",null,"yinxing233")])]),s("br"),s("a",{href:"https://github.com/message163/various-devices/commits?author=yinxing233",title:"Code"},"💻")])])]),s("tfoot",null,[s("tr",null,[s("td",{align:"center",size:"13px",colspan:"7"},[s("img",{src:"https://raw.githubusercontent.com/all-contributors/all-contributors-cli/1b8533af435da9854653492b1327a23a4dbd0a10/assets/logo-small.svg"}),s("a",{href:"https://all-contributors.js.org/docs/en/bot/usage"},"Add your contributions")])])])],-1),r=[h,l];function d(p,c,u,k,g,b){return e(),a("div",null,r)}const w=i(o,[["render",d]]);export{v as __pageData,w as default};
